<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="ssd1306_8cpp" kind="file" language="C++">
    <compoundname>ssd1306.cpp</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes local="no">Wire.h</includes>
    <includes refid="ssd1306_8h" local="no">ssd1306.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp</label>
        <link refid="ssd1306_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ssd1306.h</label>
        <link refid="ssd1306_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="3">
        <label>Wire.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ssd1306_8cpp_1accc32c7a4d874d3ab78d39867722e28a" prot="public" static="no" mutable="no">
        <type><ref refid="struct_s_s_d1306__t" kindref="compound">SSD1306_t</ref></type>
        <definition>SSD1306_t SSD1306</definition>
        <argsstring></argsstring>
        <name>SSD1306</name>
        <initializer>= {
  .MASK_X_LOW = 0,
  .MASK_Y_LOW = 0,
  .MASK_X_HIGH = SSD1306_WIDTH,
  .MASK_Y_HIGH = SSD1306_HEIGHT,
  .INVERTED = 0
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="5" column="11" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ssd1306_8cpp_1a04f148b72e44c8c5a48dd9137c63b5a1" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char SSD1306_DATA_BUFFER[SSD1306_BUFFER_DATA_MAX]</definition>
        <argsstring>[SSD1306_BUFFER_DATA_MAX]</argsstring>
        <name>SSD1306_DATA_BUFFER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="13" column="15" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ssd1306_8cpp_1a7cb0cd7c79e68d9fb809c5c28be24d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_I2C_WRITE</definition>
        <argsstring>(unsigned char *PACKAGE, uint8_t len)</argsstring>
        <name>SSD1306_I2C_WRITE</name>
        <param>
          <type>unsigned char *</type>
          <declname>PACKAGE</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="17" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a4da59090affe2a6b1d03b16201e56d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_CMD_WRITE</definition>
        <argsstring>(uint8_t command)</argsstring>
        <name>SSD1306_CMD_WRITE</name>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="23" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="23" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a8f8e251b2ef26db36a739607fca29779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_CMD_WRITE</definition>
        <argsstring>(uint8_t command, uint8_t data)</argsstring>
        <name>SSD1306_CMD_WRITE</name>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="30" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a374a2874b9b140d0dfd4055b0cfcc95f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_CMD_WRITE</definition>
        <argsstring>(uint8_t command, uint8_t data1, uint8_t data2)</argsstring>
        <name>SSD1306_CMD_WRITE</name>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="38" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="38" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1ac77a7ee3502cdf98def73a7e15919cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_I2C_SETUP</definition>
        <argsstring>()</argsstring>
        <name>SSD1306_I2C_SETUP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="47" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1ab0fea0063b5244d9473bf491b13b5308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_DATA_WRITE</definition>
        <argsstring>()</argsstring>
        <name>SSD1306_DATA_WRITE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="52" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="52" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a94f54e5bc9bdf8ec709361a1969f00f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_INIT</definition>
        <argsstring>()</argsstring>
        <name>SSD1306_INIT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="61" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="61" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a5185f43bab4f060f2aa947f3a9a4da23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_DISPLAY_UPDATE</definition>
        <argsstring>()</argsstring>
        <name>SSD1306_DISPLAY_UPDATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="91" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a0dda58185e1a0437802511563e85727c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t SSD1306_GET_FONT_HEIGHT</definition>
        <argsstring>(uint8_t s)</argsstring>
        <name>SSD1306_GET_FONT_HEIGHT</name>
        <param>
          <type>uint8_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="99" column="9" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="99" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a3c42eceae6c850dc7b6ce6266e7a8a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t SSD1306_GET_FONT_WIDTH</definition>
        <argsstring>(uint8_t s)</argsstring>
        <name>SSD1306_GET_FONT_WIDTH</name>
        <param>
          <type>uint8_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="112" column="9" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="112" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a7f37dde657ea169016756972c258bcd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_BUFFER_FILL</definition>
        <argsstring>(SSD1306_COLOR_t color)</argsstring>
        <name>SSD1306_BUFFER_FILL</name>
        <param>
          <type>SSD1306_COLOR_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="125" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1afae76998f9f98607cb560ea4f7ab5103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_BUFFER_CLEAR</definition>
        <argsstring>()</argsstring>
        <name>SSD1306_BUFFER_CLEAR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="131" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1aeb64ff16de3821d89657ba192bb9246a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_INVERT</definition>
        <argsstring>()</argsstring>
        <name>SSD1306_INVERT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="135" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a1c90532d1581ab56364eb177b8cb8f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_SET_MASK</definition>
        <argsstring>(int16_t x1, int16_t y1, int16_t x2, int16_t y2)</argsstring>
        <name>SSD1306_SET_MASK</name>
        <param>
          <type>int16_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="139" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="139" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a55b5a78c5e0e20bb79d329a2528456b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_WRITE_PIXEL</definition>
        <argsstring>(int16_t x, int16_t y, SSD1306_COLOR_t color)</argsstring>
        <name>SSD1306_WRITE_PIXEL</name>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>SSD1306_COLOR_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="146" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="146" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a6f94bb742386543796950340e24cae14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_WRITE_CHAR</definition>
        <argsstring>(int16_t x, int16_t y, char ch, uint8_t s, SSD1306_COLOR_t color, SSD1306_MODE_t mode)</argsstring>
        <name>SSD1306_WRITE_CHAR</name>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>SSD1306_COLOR_t</type>
          <declname>color</declname>
        </param>
        <param>
          <type>SSD1306_MODE_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="166" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="166" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1aad21d22419b167a4229d1336a28b04b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_WRITE_STRING</definition>
        <argsstring>(int16_t x, int16_t y, const char *str, uint8_t s, SSD1306_COLOR_t color, SSD1306_MODE_t mode)</argsstring>
        <name>SSD1306_WRITE_STRING</name>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>SSD1306_COLOR_t</type>
          <declname>color</declname>
        </param>
        <param>
          <type>SSD1306_MODE_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="197" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="197" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a239215b1093606c540cdee6daba6cc5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_WRITE_DOUBLE</definition>
        <argsstring>(int16_t x, int16_t y, double d, uint8_t s, SSD1306_COLOR_t color, SSD1306_MODE_t mode)</argsstring>
        <name>SSD1306_WRITE_DOUBLE</name>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>SSD1306_COLOR_t</type>
          <declname>color</declname>
        </param>
        <param>
          <type>SSD1306_MODE_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="235" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="235" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a9c6b44529c2e45b9226dcebf3b90edd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_WRITE_INT</definition>
        <argsstring>(int16_t x, int16_t y, int i, uint8_t s, SSD1306_COLOR_t color, SSD1306_MODE_t mode)</argsstring>
        <name>SSD1306_WRITE_INT</name>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>SSD1306_COLOR_t</type>
          <declname>color</declname>
        </param>
        <param>
          <type>SSD1306_MODE_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="254" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="254" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a8cb15fc7a2929a383c390016955f5333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_WRITE_BOOL</definition>
        <argsstring>(int16_t x, int16_t y, bool b, uint8_t s, SSD1306_COLOR_t color, SSD1306_MODE_t mode)</argsstring>
        <name>SSD1306_WRITE_BOOL</name>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>SSD1306_COLOR_t</type>
          <declname>color</declname>
        </param>
        <param>
          <type>SSD1306_MODE_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="269" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="269" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="ssd1306_8cpp_1a769efb2db42201138eb2d4b50aa744b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSD1306_WRITE_LINE</definition>
        <argsstring>(int16_t x0, int16_t y0, int16_t x1, int16_t y1, SSD1306_COLOR_t color)</argsstring>
        <name>SSD1306_WRITE_LINE</name>
        <param>
          <type>int16_t</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>SSD1306_COLOR_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" line="283" column="6" bodyfile="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp" bodystart="283" bodyend="354"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Wire.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ssd1306.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="struct_s_s_d1306__t" kindref="compound">SSD1306_t</ref><sp/>SSD1306<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>.MASK_X_LOW<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>.MASK_Y_LOW<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>.MASK_X_HIGH<sp/>=<sp/>SSD1306_WIDTH,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>.MASK_Y_HIGH<sp/>=<sp/>SSD1306_HEIGHT,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>.INVERTED<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="11"><highlight class="normal">};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>SSD1306_DATA_BUFFER[SSD1306_BUFFER_DATA_MAX];</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ARDUINO_CI_UNITTEST_ACTIVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_I2C_WRITE(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*PACKAGE,<sp/>uint8_t<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>Wire.beginTransmission(SSD1306_ADDR);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>Wire.write(PACKAGE,<sp/>len);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_CMD_WRITE(uint8_t<sp/>command)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>PACKAGE[2];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>PACKAGE[0]<sp/>=<sp/>SSD1306_CONTROL_CMD;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>PACKAGE[1]<sp/>=<sp/>command;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>SSD1306_I2C_WRITE(PACKAGE,<sp/>2);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_CMD_WRITE(uint8_t<sp/>command,<sp/>uint8_t<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>PACKAGE[3];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>PACKAGE[0]<sp/>=<sp/>SSD1306_CONTROL_CMD;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>PACKAGE[1]<sp/>=<sp/>command;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>PACKAGE[2]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>SSD1306_I2C_WRITE(PACKAGE,<sp/>3);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_CMD_WRITE(uint8_t<sp/>command,<sp/>uint8_t<sp/>data1,<sp/>uint8_t<sp/>data2)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>PACKAGE[4];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>PACKAGE[0]<sp/>=<sp/>SSD1306_CONTROL_CMD;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>PACKAGE[1]<sp/>=<sp/>command;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>PACKAGE[2]<sp/>=<sp/>data1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>PACKAGE[3]<sp/>=<sp/>data2;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>SSD1306_I2C_WRITE(PACKAGE,<sp/>4);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_I2C_SETUP(){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>delay(10);<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>Wire.begin();</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_DATA_WRITE()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>PACKAGE[2];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>PACKAGE[0]<sp/>=<sp/>SSD1306_CONTROL_DATA;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>SSD1306_BUFFER_DATA_MAX;<sp/>i++)<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>PACKAGE[1]<sp/>=<sp/>SSD1306_DATA_BUFFER[i];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>SSD1306_I2C_WRITE(PACKAGE,<sp/>2);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_INIT()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>SSD1306_I2C_SETUP();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Establish<sp/>I2C<sp/>Connection<sp/>to<sp/>Display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0xAE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0xD5,<sp/>0x80);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x81,<sp/>0x80);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Brightness<sp/>[0~255]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x20,<sp/>0x00);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Memory<sp/>Address<sp/>Mode<sp/>[horizontal=0,<sp/>vertical=1,<sp/>page(default)=2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0xD3,<sp/>0x00);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>Offset<sp/>[0~63]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x40);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>start<sp/>line<sp/>[0x40~0x7F]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0xA8,<sp/>SSD1306_HEIGHT-1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multiplex<sp/>number<sp/>(activated<sp/>rows)<sp/>[height-1,<sp/>default=63]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0xDA,<sp/>0x02);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reduce<sp/>to<sp/>half<sp/>of<sp/>height<sp/>(as<sp/>we<sp/>use<sp/>a<sp/>32px<sp/>display)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0xA1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Segment<sp/>(Column)<sp/>Mode<sp/>[normal=0xA0,<sp/>inverse=0xA1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0xC8);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Common<sp/>(Row)<sp/>Mode<sp/>[normal=0xC0,<sp/>inverse=0xC8]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0xA6);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>Mode<sp/>[normal=0xA6,<sp/>inverse=0xA7]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x2E);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>Scroll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x8D,<sp/>0x14);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Charge<sp/>Pump<sp/>[On=0x14,<sp/>Off=0x10]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0xAF);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>SSD1306_BUFFER_CLEAR();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>Data<sp/>Buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>SSD1306_DISPLAY_UPDATE();<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x21,0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x22,0,3);<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>SSD1306_DATA_WRITE();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>Data<sp/>Buffer<sp/>to<sp/>SSD1306</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x21,0,127);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x22,4,7);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>SSD1306_DATA_WRITE();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>Data<sp/>Buffer<sp/>to<sp/>SSD1306</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_DISPLAY_UPDATE()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x21,<sp/>0,<sp/>SSD1306_WIDTH-1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Segment<sp/>(column)<sp/>start<sp/>at<sp/>0<sp/>to<sp/>127</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>SSD1306_CMD_WRITE(0x22,<sp/>0,<sp/>(SSD1306_HEIGHT/8)-1);<sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>(rows)<sp/>start<sp/>at<sp/>0<sp/>to<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>SSD1306_DATA_WRITE();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>Data<sp/>Buffer<sp/>to<sp/>SSD1306</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">uint8_t<sp/>SSD1306_GET_FONT_HEIGHT(uint8_t<sp/>s){</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FONT_7_10_HEIGHT;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FONT_11_18_HEIGHT;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>3){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FONT_16_26_HEIGHT;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">uint8_t<sp/>SSD1306_GET_FONT_WIDTH(uint8_t<sp/>s){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FONT_7_10_WIDTH;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FONT_11_18_WIDTH;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>3){</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FONT_16_26_WIDTH;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_BUFFER_FILL(SSD1306_COLOR_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i&lt;SSD1306_BUFFER_DATA_MAX;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>SSD1306_DATA_BUFFER[i]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_BUFFER_CLEAR()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>SSD1306_BUFFER_FILL(SSD1306_BLACK);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_INVERT()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>SSD1306.INVERTED<sp/>=<sp/>!SSD1306.INVERTED;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_SET_MASK(int16_t<sp/>x1,<sp/>int16_t<sp/>y1,<sp/>int16_t<sp/>x2,<sp/>int16_t<sp/>y2)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>SSD1306.MASK_X_LOW<sp/>=<sp/>(x1&gt;=0<sp/>&amp;&amp;<sp/>x1&lt;SSD1306_WIDTH)<sp/>?<sp/>x1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>SSD1306.MASK_Y_LOW<sp/>=<sp/>(y1&gt;=0<sp/>&amp;&amp;<sp/>y1&lt;SSD1306_HEIGHT)<sp/>?<sp/>y1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>SSD1306.MASK_X_HIGH<sp/>=<sp/>(x2&gt;=0<sp/>&amp;&amp;<sp/>x2&lt;SSD1306_WIDTH)<sp/>?<sp/>x2<sp/>:<sp/>SSD1306_WIDTH-1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>SSD1306.MASK_Y_HIGH<sp/>=<sp/>(y2&gt;=0<sp/>&amp;&amp;<sp/>y2&lt;SSD1306_HEIGHT)<sp/>?<sp/>y2<sp/>:<sp/>SSD1306_HEIGHT-1;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_WRITE_PIXEL(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/>SSD1306_COLOR_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>SSD1306.MASK_X_LOW<sp/>||</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>&lt;<sp/>SSD1306.MASK_Y_LOW<sp/>||</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>&gt;=<sp/>SSD1306.MASK_X_HIGH<sp/>||</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>&gt;=<sp/>SSD1306.MASK_Y_HIGH)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SSD1306.INVERTED)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>color<sp/>=<sp/>(SSD1306_COLOR_t)!color;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(color<sp/>==<sp/>SSD1306_WHITE)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>SSD1306_DATA_BUFFER[1+<sp/>x<sp/>+<sp/>(y<sp/>&gt;&gt;<sp/>3)<sp/>*<sp/>SSD1306_WIDTH]<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(y<sp/>%<sp/>8));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>SSD1306_DATA_BUFFER[1+<sp/>x<sp/>+<sp/>(y<sp/>&gt;&gt;<sp/>3)<sp/>*<sp/>SSD1306_WIDTH]<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>(y<sp/>%<sp/>8));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_WRITE_CHAR(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/>uint8_t<sp/>s,<sp/>SSD1306_COLOR_t<sp/>color,<sp/>SSD1306_MODE_t<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>uint8_t<sp/>w<sp/>=<sp/>SSD1306_GET_FONT_WIDTH(s);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>uint8_t<sp/>h<sp/>=<sp/>SSD1306_GET_FONT_HEIGHT(s);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>int16_t<sp/>x0,<sp/>y0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>uint16_t<sp/>b;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>font<sp/>to<sp/>screen<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y0<sp/>=<sp/>0;<sp/>y0<sp/>&lt;<sp/>h;<sp/>y0++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>pgm_read_word_near(&amp;Font7x10[0]<sp/>+<sp/>((ch<sp/>-<sp/>32)<sp/>*<sp/>h<sp/>+<sp/>y0));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>pgm_read_word_near(&amp;Font11x18[0]<sp/>+<sp/>((ch<sp/>-<sp/>32)<sp/>*<sp/>h<sp/>+<sp/>y0));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>3){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>pgm_read_word_near(&amp;Font16x26[0]<sp/>+<sp/>((ch<sp/>-<sp/>32)<sp/>*<sp/>h<sp/>+<sp/>y0));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x0<sp/>=<sp/>0;<sp/>x0<sp/>&lt;<sp/>w;<sp/>x0++)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((b<sp/>&lt;&lt;<sp/>x0)<sp/>&amp;<sp/>0x8000)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSD1306_WRITE_PIXEL(x<sp/>+<sp/>x0,<sp/>y<sp/>+<sp/>y0,<sp/>(SSD1306_COLOR_t)<sp/>color);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>SSD1306_OVERRIDE)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSD1306_WRITE_PIXEL(x<sp/>+<sp/>x0,<sp/>y<sp/>+<sp/>y0,<sp/>(SSD1306_COLOR_t)!color);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_WRITE_STRING(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/>uint8_t<sp/>s,<sp/>SSD1306_COLOR_t<sp/>color,<sp/>SSD1306_MODE_t<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>uint8_t<sp/>w<sp/>=<sp/>SSD1306_GET_FONT_WIDTH(s);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>uint8_t<sp/>h<sp/>=<sp/>SSD1306_GET_FONT_HEIGHT(s);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>int16_t<sp/>l<sp/>=<sp/>strlen(str);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(x<sp/>+<sp/>l*w<sp/>&lt;<sp/>SSD1306.MASK_X_LOW)<sp/>||</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(SSD1306.MASK_X_HIGH<sp/>&lt;<sp/>x)<sp/>||</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(y<sp/>+<sp/>h<sp/>&lt;<sp/>SSD1306.MASK_Y_LOW)<sp/>||</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(SSD1306.MASK_Y_HIGH<sp/>&lt;<sp/>y)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>){</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>int16_t<sp/>fx<sp/>=<sp/>(SSD1306.MASK_X_LOW<sp/>-<sp/>x)<sp/>/<sp/>w;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>int16_t<sp/>rx<sp/>=<sp/>(x<sp/>-<sp/>SSD1306.MASK_X_HIGH)<sp/>/<sp/>h;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>estr<sp/>=<sp/>str<sp/>+<sp/>l;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>int16_t<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cut<sp/>off<sp/>characters<sp/>which<sp/>are<sp/>out<sp/>of<sp/>masking<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fx<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>fx;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>fx*w;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>estr<sp/>-=<sp/>rx;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>until<sp/>null-byte<sp/>or<sp/>the<sp/>first<sp/>cutoff<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str<sp/>&amp;&amp;<sp/>str<sp/>&lt;<sp/>estr)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SSD1306_WRITE_CHAR(x<sp/>+<sp/>n*w,<sp/>y,<sp/>*str,<sp/>s,<sp/>color,<sp/>mode);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_WRITE_DOUBLE(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/>uint8_t<sp/>s,<sp/>SSD1306_COLOR_t<sp/>color,<sp/>SSD1306_MODE_t<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>uint8_t<sp/>w<sp/>=<sp/>SSD1306_GET_FONT_WIDTH(s);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//uint8_t<sp/>h<sp/>=<sp/>SSD1306_GET_FONT_HEIGHT(s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf<sp/>[4];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>ARDUINO_CI_UNITTEST_ACTIVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>dtostrf(d,<sp/>0,<sp/>2,<sp/>buf);<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Investigate<sp/>error<sp/>in<sp/>unittests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SSD1306_WRITE_CHAR(x<sp/>+<sp/>n*w,<sp/>y,<sp/>buf[n],<sp/>s,<sp/>color,<sp/>mode);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_WRITE_INT(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>uint8_t<sp/>s,<sp/>SSD1306_COLOR_t<sp/>color,<sp/>SSD1306_MODE_t<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>uint8_t<sp/>w<sp/>=<sp/>SSD1306_GET_FONT_WIDTH(s);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//uint8_t<sp/>h<sp/>=<sp/>SSD1306_GET_FONT_HEIGHT(s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf<sp/>[4];<sp/></highlight><highlight class="comment">//TODO:<sp/>Make<sp/>size<sp/>dependent<sp/>of<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>sprintf<sp/>(buf,<sp/></highlight><highlight class="stringliteral">&quot;%03i&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>4)<sp/></highlight><highlight class="comment">//<sp/>size<sp/>dependence<sp/>needed<sp/>(see<sp/>above)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SSD1306_WRITE_CHAR(x<sp/>+<sp/>n*w,<sp/>y,<sp/>buf[n],<sp/>s,<sp/>color,<sp/>mode);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_WRITE_BOOL(int16_t<sp/>x,<sp/>int16_t<sp/>y,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b,<sp/>uint8_t<sp/>s,<sp/>SSD1306_COLOR_t<sp/>color,<sp/>SSD1306_MODE_t<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//uint8_t<sp/>w<sp/>=<sp/>SSD1306_GET_FONT_WIDTH(s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//uint8_t<sp/>h<sp/>=<sp/>SSD1306_GET_FONT_HEIGHT(s);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>SSD1306_WRITE_CHAR(x,<sp/>y,<sp/>buf,<sp/>s,<sp/>color,<sp/>mode);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SSD1306_WRITE_LINE(int16_t<sp/>x0,<sp/>int16_t<sp/>y0,<sp/>int16_t<sp/>x1,<sp/>int16_t<sp/>y1,<sp/>SSD1306_COLOR_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>int16_t<sp/>dx,<sp/>dy,<sp/>sx,<sp/>sy,<sp/>err,<sp/>e2,<sp/>i,<sp/>temp;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>x0<sp/>=<sp/>(x0<sp/>&gt;=<sp/>SSD1306_WIDTH)<sp/>?<sp/>(SSD1306_WIDTH<sp/>-<sp/>1)<sp/>:<sp/>x0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>x1<sp/>=<sp/>(x1<sp/>&gt;=<sp/>SSD1306_WIDTH)<sp/>?<sp/>(SSD1306_WIDTH<sp/>-<sp/>1)<sp/>:<sp/>x1;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>y0<sp/>=<sp/>(y0<sp/>&gt;=<sp/>SSD1306_HEIGHT)<sp/>?<sp/>(SSD1306_HEIGHT<sp/>-<sp/>1)<sp/>:<sp/>y0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>y1<sp/>=<sp/>(y1<sp/>&gt;=<sp/>SSD1306_HEIGHT)<sp/>?<sp/>(SSD1306_HEIGHT<sp/>-<sp/>1)<sp/>:<sp/>y1;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>dx<sp/>=<sp/>(x0<sp/>&lt;<sp/>x1)<sp/>?<sp/>(x1<sp/>-<sp/>x0)<sp/>:<sp/>(x0<sp/>-<sp/>x1);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>dy<sp/>=<sp/>(y0<sp/>&lt;<sp/>y1)<sp/>?<sp/>(y1<sp/>-<sp/>y0)<sp/>:<sp/>(y0<sp/>-<sp/>y1);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>sx<sp/>=<sp/>(x0<sp/>&lt;<sp/>x1)<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>sy<sp/>=<sp/>(y0<sp/>&lt;<sp/>y1)<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>((dx<sp/>&gt;<sp/>dy)<sp/>?<sp/>dx<sp/>:<sp/>-dy)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dx<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&lt;<sp/>y0)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&lt;<sp/>x0)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>y0;<sp/>i<sp/>&lt;=<sp/>y1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SSD1306_WRITE_PIXEL(x0,<sp/>i,<sp/>color);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dy<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&lt;<sp/>y0)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>y0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>&lt;<sp/>x0)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>x0;<sp/>i<sp/>&lt;=<sp/>x1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SSD1306_WRITE_PIXEL(i,<sp/>y0,<sp/>color);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>SSD1306_WRITE_PIXEL(x0,<sp/>y0,<sp/>color);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x0<sp/>==<sp/>x1<sp/>&amp;&amp;<sp/>y0<sp/>==<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>e2<sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e2<sp/>&gt;<sp/>-dx)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>-=<sp/>dy;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>+=<sp/>sx;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e2<sp/>&lt;<sp/>dy)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>+=<sp/>dx;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>+=<sp/>sy;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/axel/dev/arduino/desklab-arduino-lib/src/ssd1306.cpp"/>
  </compounddef>
</doxygen>
